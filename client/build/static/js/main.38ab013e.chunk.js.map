{"version":3,"sources":["services/apiConfig.js","components/shared/Nav.jsx","components/shared/Footer.jsx","components/shared/Layout.jsx","components/Home.jsx","components/Item.jsx","components/Search.jsx","components/Sort.js","services/items.js","components/Items.jsx","components/ItemCreate.jsx","components/ItemEdit.jsx","components/ItemDetail.jsx","services/user.js","components/SignUp.jsx","components/SignIn.jsx","components/SignOut.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiUrl","authenticatedOptions","className","to","unauthenticatedOptions","alwaysOptions","Nav","user","email","Footer","Layout","props","children","Home","Item","_id","src","imgURL","alt","name","price","Search","onSubmit","e","value","onChange","placeholder","type","autoFocus","compareKey","key","a","b","ZA","arr","sort","reverse","lowestFirst","parseInt","highestFirst","jsonWebToken","localStorage","getItem","console","log","apiUrls","window","location","hostname","api","axios","create","baseURL","headers","Authorization","getItems","get","response","data","id","createItem","item","post","updateItem","put","deleteItem","delete","Items","handleSearchChange","event","setState","filterValue","target","filteredItems","state","items","filter","toLowerCase","includes","handleSortChange","selectValue","input","products","handleSubmit","preventDefault","this","PRODUCTS","filteredProducts","map","product","index","htmlFor","Component","ItemCreate","handleChange","created","description","required","rows","ItemEdit","match","params","updated","cols","ItemDetail","onClick","signUp","credentials","resp","setItem","token","signIn","signOut","clear","verifyUser","res","SignUp","onSignUp","history","setUser","then","push","catch","error","password","passwordConfirmation","isError","errorMsg","renderError","toggleForm","username","SignIn","onSignIn","SignOut","clearUser","finally","App","exact","path","render","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.38ab013e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst jsonWebToken = localStorage.getItem('token') || null;\nconsole.log('JWT: ', jsonWebToken);\n\nlet apiUrl;\n\nconst apiUrls = {\n  production: 'https://red-squirrel.herokuapp.com/api',\n  development: 'http://localhost:3000/api',\n};\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development;\n} else {\n  apiUrl = apiUrls.production;\n}\n\nconst api = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    Authorization: `Bearer ${jsonWebToken}`,\n    'Access-Control-Allow-Origin': '*',\n  },\n});\n\nexport default api;\n","import React from 'react';\nimport './Nav.css';\nimport { NavLink } from 'react-router-dom';\n\nconst authenticatedOptions = (\n  <>\n    <NavLink className=\"link\" to=\"/add-product\">\n      Add Product\n    </NavLink>\n    <NavLink className=\"link\" to=\"/sign-out\">\n      Sign Out\n    </NavLink>\n  </>\n);\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink className=\"link\" to=\"/sign-up\">\n      Sign Up\n    </NavLink>\n    <NavLink className=\"link\" to=\"/sign-in\">\n      Sign In\n    </NavLink>\n  </>\n);\n\nconst alwaysOptions = (\n  <>\n    <NavLink className=\"link\" to=\"/products\">\n      Products\n    </NavLink>\n  </>\n);\n\nconst Nav = ({ user }) => {\n  return (\n    <nav>\n      <div className=\"nav\">\n        <NavLink className=\"logo\" to=\"/\">\n          ProductsApp\n        </NavLink>\n        <div className=\"links\">\n          {user && <div className=\"link welcome\">Welcome, {user.email}</div>}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => <footer></footer>;\n\nexport default Footer;\n","import React from 'react';\nimport './Layout.css';\nimport Nav from './Nav';\nimport Footer from './Footer';\n\nconst Layout = (props) => (\n  <div className=\"layout\">\n    <Nav user={props.user} />\n    <div className=\"layout-children\">{props.children}</div>\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport './Home.css';\nimport Layout from './shared/Layout';\n\nconst Home = (props) => {\n  return (\n    <Layout user={props.user}>\n      <div className=\"home\"></div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './Item.css';\nimport { Link } from 'react-router-dom';\n\nconst Item = (props) => {\n  return (\n    <>\n      <Link className=\"product\" to={`/products/${props._id}`}>\n        <img className=\"product-image\" src={props.imgURL} alt={props.name} />\n        <div className=\"product-name\">{props.name}</div>\n        <div className=\"price\">{`$${props.price}`}</div>\n      </Link>\n    </>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport './Search.css';\n\nconst Search = (props) => {\n  return (\n    <form className=\"search-form\" onSubmit={(e) => props.onSubmit(e)}>\n      <input\n        className=\"search-input\"\n        value={props.value}\n        onChange={(e) => props.onChange(e)}\n        name=\"Search\"\n        placeholder=\"Search\"\n        type=\"text\"\n        autoFocus\n      />\n    </form>\n  );\n};\n\nexport default Search;\n","const compareKey = (key) => (a, b) => {\n  if (a[key] < b[key]) {\n    return -1;\n  }\n  if (a[key] > b[key]) {\n    return 1;\n  }\n  return 0;\n};\n\n// one liner\n// const compareKey = key => (a, b) => a[key] == b[key]? (a[key] < b[key] ? -1 : 1) : 0\n\nexport const AZ = (arr) => arr.sort(compareKey('name'));\nexport const ZA = (arr) => arr.sort(compareKey('name')).reverse();\nexport const lowestFirst = (arr) =>\n  arr.sort((a, b) => parseInt(a.price) - parseInt(b.price));\nexport const highestFirst = (arr) =>\n  arr.sort((a, b) => parseInt(b.price) - parseInt(a.price));\n","import api from './apiConfig';\n\nexport const getItems = async () => {\n  try {\n    const response = await api.get('/items');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getItem = async (id) => {\n  try {\n    const response = await api.get(`/items/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const createItem = async (item) => {\n  try {\n    const response = await api.post('/items', item);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updateItem = async (id, item) => {\n  try {\n    const response = await api.put(`/items/${id}`, item);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const deleteItem = async (id) => {\n  try {\n    const response = await api.delete(`/items/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { Component } from 'react';\nimport './Items.css';\nimport Item from './Item';\nimport Search from './Search';\nimport { AZ, ZA, lowestFirst, highestFirst } from './Sort';\nimport Layout from './shared/Layout';\nimport { getItems } from '../services/items';\n\nclass Items extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      filterValue: '',\n      filteredItems: null,\n      selectValue: 'Featured',\n    };\n  }\n\n  async componentDidMount() {\n    const items = await getItems();\n    this.setState({ items });\n  }\n\n  handleSearchChange = (event) => {\n    const filter = () => {\n      const filteredItems = this.state.items.filter((item) => {\n        return item.name\n          .toLowerCase()\n          .includes(this.state.filterValue.toLowerCase());\n      });\n      this.setState({ filteredItems });\n    };\n    this.setState({ filterValue: event.target.value }, filter);\n  };\n\n  handleSortChange = (event) => {\n    this.setState({ selectValue: event.target.value });\n    let input = event.target.value; // a-z\n    const { products } = this.state;\n    switch (input) {\n      case 'name-ascending':\n        this.setState({\n          products: AZ(products),\n        });\n        break;\n      case 'name-descending':\n        this.setState({\n          products: ZA(products),\n        });\n        break;\n      case 'price-ascending':\n        this.setState({\n          products: lowestFirst(products),\n        });\n        break;\n      case 'price-descending':\n        this.setState({\n          products: highestFirst(products),\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleSubmit = (event) => event.preventDefault();\n\n  render() {\n    const products = this.state.filteredProducts\n      ? this.state.filteredProducts\n      : this.state.products;\n    const PRODUCTS = products.map((product, index) => (\n      <Item\n        _id={product._id}\n        name={product.name}\n        imgURL={product.imgURL}\n        price={product.price}\n        key={index}\n      />\n    ));\n\n    return (\n      <Layout user={this.props.user}>\n        <Search\n          onSubmit={this.handleSubmit}\n          value={this.state.filterValue}\n          onChange={this.handleSearchChange}\n        />\n        <form className=\"sort-container\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"sort\">SORT BY:</label>\n          <select\n            className=\"sort\"\n            value={this.state.selectValue}\n            onChange={this.handleSortChange}\n          >\n            <option className=\"option\" value=\"name-ascending\">\n              &nbsp; Alphabetically, A-Z &nbsp;\n            </option>\n            <option value=\"name-descending\">\n              &nbsp; Alphabetically, Z-A &nbsp;\n            </option>\n            <option value=\"price-ascending\">\n              &nbsp; Price, low to high &nbsp;\n            </option>\n            <option value=\"price-descending\">\n              &nbsp; Price, high to low &nbsp;\n            </option>\n          </select>\n        </form>\n        <div className=\"products\">{PRODUCTS}</div>\n      </Layout>\n    );\n  }\n}\n\nexport default Items;\n","import React, { Component } from 'react';\nimport './ItemCreate.css';\nimport Layout from './shared/Layout';\nimport { Redirect } from 'react-router-dom';\nimport { createItem } from '../services/items';\n\nclass ItemCreate extends Component {\n  constructor() {\n    super();\n    this.state = {\n      product: {\n        name: '',\n        description: '',\n        imgURL: '',\n        price: '',\n      },\n      created: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      product: {\n        ...this.state.product,\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const created = await createItem(this.state.product);\n    this.setState({ created });\n  };\n\n  render() {\n    const { product, created } = this.state;\n\n    if (created) {\n      return <Redirect to={`/products`} />;\n    }\n    return (\n      <Layout user={this.props.user}>\n        <form className=\"create-form\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"input-name\"\n            placeholder=\"Name\"\n            value={product.name}\n            name=\"name\"\n            required\n            autoFocus\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"input-price\"\n            placeholder=\"Price\"\n            value={product.price}\n            name=\"price\"\n            required\n            onChange={this.handleChange}\n          />\n          <textarea\n            className=\"textarea-description\"\n            rows={10}\n            placeholder=\"Description\"\n            value={product.description}\n            name=\"description\"\n            required\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"input-image-link\"\n            placeholder=\"Image Link\"\n            value={product.imgURL}\n            name=\"imgURL\"\n            required\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\" className=\"submit-button\">\n            Submit\n          </button>\n        </form>\n      </Layout>\n    );\n  }\n}\n\nexport default ItemCreate;\n","import React, { Component } from 'react';\nimport './ItemEdit.css';\nimport { Redirect } from 'react-router-dom';\nimport Layout from './shared/Layout';\nimport { getItem, updateItem } from '../services/items';\n\nclass ItemEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {\n        name: '',\n        description: '',\n        imgURL: '',\n        price: '',\n      },\n      updated: false,\n    };\n  }\n\n  async componentDidMount() {\n    let { id } = this.props.match.params;\n    const product = await getItem(id);\n    this.setState({ product });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      product: {\n        ...this.state.product,\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    let { id } = this.props.match.params;\n    const updated = await updateItem(id, this.state.product);\n    this.setState({ updated });\n  };\n\n  render() {\n    const { product, updated } = this.state;\n\n    if (updated) {\n      return <Redirect to={`/products/${this.props.match.params.id}`} />;\n    }\n\n    return (\n      <Layout user={this.props.user}>\n        <div className=\"product-edit\">\n          <div className=\"image-container\">\n            <img\n              className=\"edit-product-image\"\n              src={product.imgURL}\n              alt={product.name}\n            />\n            <form onSubmit={this.handleSubmit}>\n              <input\n                className=\"edit-input-image-link\"\n                placeholder=\"Image Link\"\n                value={product.imgURL}\n                name=\"imgURL\"\n                required\n                onChange={this.handleChange}\n              />\n            </form>\n          </div>\n          <form className=\"edit-form\" onSubmit={this.handleSubmit}>\n            <input\n              className=\"input-name\"\n              placeholder=\"Name\"\n              value={product.name}\n              name=\"name\"\n              required\n              autoFocus\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"input-price\"\n              placeholder=\"Price\"\n              value={product.price}\n              name=\"price\"\n              required\n              onChange={this.handleChange}\n            />\n            <textarea\n              className=\"textarea-description\"\n              rows={10}\n              cols={78}\n              placeholder=\"Description\"\n              value={product.description}\n              name=\"description\"\n              required\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"save-button\">\n              Save\n            </button>\n          </form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ItemEdit;\n","import React, { Component } from 'react';\nimport './ItemDetail.css';\nimport Layout from './shared/Layout';\nimport { getItem, deleteItem } from '../services/items';\nimport { Link } from 'react-router-dom';\n\nclass ItemDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: {\n        name: '',\n        description: '',\n        imgURL: '',\n      },\n    };\n  }\n\n  async componentDidMount() {\n    let { id } = this.props.match.params;\n    const product = await getItem(id);\n    this.setState({ product });\n  }\n\n  render() {\n    const { product } = this.state;\n    return (\n      <Layout user={this.props.user}>\n        <div className=\"product-detail\">\n          <img\n            className=\"product-detail-image\"\n            src={product.imgURL}\n            alt={product.name}\n          />\n          <div className=\"detail\">\n            <div className=\"name\">{product.name}</div>\n            <div className=\"price\">{`$${product.price}`}</div>\n            <div className=\"description\">{product.description}</div>\n            <div className=\"button-container\">\n              <button className=\"edit-button\">\n                <Link\n                  className=\"edit-link\"\n                  to={`/products/${product._id}/edit`}\n                >\n                  Edit\n                </Link>\n              </button>\n              <button\n                className=\"delete-button\"\n                onClick={() => deleteItem(product._id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ItemDetail;\n","import api from './apiConfig';\n\nexport const signUp = async (credentials) => {\n  try {\n    const resp = await api.post('/sign-up', credentials);\n    localStorage.setItem('token', resp.data.token);\n    return resp.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const signIn = async (credentials) => {\n  try {\n    const resp = await api.post('/sign-in', credentials);\n    localStorage.setItem('token', resp.data.token);\n    return resp.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const signOut = async (user) => {\n  try {\n    await localStorage.clear();\n    return true;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const changePassword = async (passwords, user) => {\n  try {\n    const resp = await api.post('/');\n    return resp.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const verifyUser = async () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const res = await api.get('/verify');\n    return res.data;\n  }\n  return false;\n};\n","import React, { Component } from 'react';\nimport './SignUp.css';\nimport { signUp, signIn } from '../services/user';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      isError: false,\n      errorMsg: '',\n    };\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value,\n      isError: false,\n      errorMsg: '',\n    });\n\n  onSignUp = (event) => {\n    event.preventDefault();\n\n    const { history, setUser } = this.props;\n\n    signUp(this.state)\n      .then(() => signIn(this.state))\n      .then((res) => setUser(res.user))\n      .then(() => history.push('/'))\n      .catch((error) => {\n        console.error(error);\n        this.setState({\n          email: '',\n          password: '',\n          passwordConfirmation: '',\n          isError: true,\n          errorMsg: 'Sign Up Details Invalid',\n        });\n      });\n  };\n\n  renderError = () => {\n    const toggleForm = this.state.isError ? 'danger' : '';\n    if (this.state.isError) {\n      return (\n        <button type=\"submit\" className={toggleForm}>\n          {this.state.errorMsg}\n        </button>\n      );\n    } else {\n      return <button type=\"submit\">Sign Up</button>;\n    }\n  };\n\n  render() {\n    const { email, username, password, passwordConfirmation } = this.state;\n\n    return (\n      <div className=\"form-container\">\n        <h3>Sign Up</h3>\n        <form onSubmit={this.onSignUp}>\n          <label>Username</label>\n          <input\n            required\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            placeholder=\"Enter username\"\n            onChange={this.handleChange}\n          />\n          <label>Email address</label>\n          <input\n            required\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Enter email\"\n            onChange={this.handleChange}\n          />\n          <label>Password</label>\n          <input\n            required\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <label>Password Confirmation</label>\n          <input\n            required\n            name=\"passwordConfirmation\"\n            value={passwordConfirmation}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            onChange={this.handleChange}\n          />\n          {this.renderError()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport './SignIn.css';\nimport { signIn } from '../services/user';\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMsg: '',\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isError: false,\n      errorMsg: '',\n    });\n  };\n\n  onSignIn = (event) => {\n    event.preventDefault();\n\n    const { history, setUser } = this.props;\n\n    signIn(this.state)\n      .then((res) => {\n        setUser(res.user);\n      })\n      .then(() => history.push('/'))\n      .catch((error) => {\n        console.error(error);\n        this.setState({\n          isError: true,\n          errorMsg: 'Invalid Credentials',\n          username: '',\n          password: '',\n        });\n      });\n  };\n\n  renderError = () => {\n    const toggleForm = this.state.isError ? 'danger' : '';\n    if (this.state.isError) {\n      return (\n        <button type=\"submit\" className={toggleForm}>\n          {this.state.errorMsg}\n        </button>\n      );\n    } else {\n      return <button type=\"submit\">Sign In</button>;\n    }\n  };\n\n  render() {\n    const { username, password } = this.state;\n\n    return (\n      <div className=\"form-container\">\n        <h3>Sign In</h3>\n        <form onSubmit={this.onSignIn}>\n          <label>Username</label>\n          <input\n            required\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            placeholder=\"Enter Username\"\n            onChange={this.handleChange}\n          />\n          <label>Password</label>\n          <input\n            required\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          {this.renderError()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import { Component } from 'react';\nimport { signOut } from '../services/user';\n\nclass SignOut extends Component {\n  componentDidMount() {\n    const { history, clearUser, user } = this.props;\n    signOut(user)\n      .then(() => clearUser())\n      .finally(() => history.push('/'));\n  }\n\n  render() {\n    return '';\n  }\n}\n\nexport default SignOut;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Items from './components/Items';\nimport ItemCreate from './components/ItemCreate';\nimport ItemEdit from './components/ItemEdit';\nimport ItemDetail from './components/ItemDetail';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { verifyUser } from './services/user';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport SignOut from './components/SignOut';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n    };\n  }\n\n  async componentDidMount() {\n    const user = await verifyUser();\n    if (user) {\n      this.setState({ user });\n    }\n  }\n\n  setUser = (user) => this.setState({ user });\n\n  clearUser = () => this.setState({ user: null });\n\n  render() {\n    const { setUser, clearUser } = this;\n    const { user } = this.state;\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home user={user} />} />\n          <Route\n            exact\n            path=\"/sign-up\"\n            render={(props) => (\n              <SignUp setUser={setUser} history={props.history} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/sign-in\"\n            render={(props) => (\n              <SignIn setUser={setUser} history={props.history} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/sign-out\"\n            render={(props) => (\n              <SignOut\n                user={user}\n                clearUser={clearUser}\n                history={props.history}\n              />\n            )}\n          />\n          <Route exact path=\"/products\" render={() => <Items user={user} />} />\n          <Route\n            exact\n            path=\"/add-product\"\n            render={() =>\n              user ? <ItemCreate user={user} /> : <Redirect to=\"/signup\" />\n            }\n          />\n          <Route\n            exact\n            path=\"/products/:id/edit\"\n            render={(props) =>\n              user ? <ItemEdit {...props} user={user} /> : <Redirect to=\"/\" />\n            }\n          />\n          <Route\n            exact\n            path=\"/products/:id\"\n            render={(props) => (\n              <ItemDetail {...props} history={props.history} user={user} />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}